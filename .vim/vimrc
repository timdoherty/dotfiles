""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""" Settings """"""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
set history=50		                                        " keep 50 lines of command line history
set ruler		                                              " show the cursor position all the time
set showcmd		                                            " display incomplete commands
set incsearch		                                          " do incremental searching
set ignorecase                                            " Ignore case for search patterns
set cursorline                                            " highlight the current cursor line
set cursorcolumn                                          " highlight the current cursor column
set colorcolumn=100                                       " highlight the max column width
set nowrap                                                " turn off text wrapping
set formatoptions=t
set textwidth=0
set wrapmargin=0
set clipboard=unnamed
set expandtab
set number
set listchars=eol:¬¨,tab:>¬∑,trail:~,extends:>,precedes:<
set list
set backupdir=~/.vim/tmp
set directory=~/.vim/tmp
set splitright
set fillchars=stl:-,stlnc:-,vert:‚îÇ
set wildmenu
set wildmode=longest:list,full
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
set relativenumber
set backspace=indent,eol,start	                          " more powerful backspacing
set tabstop=2                                             " set the default tabstop
set softtabstop=2
set shiftwidth=2                                          " set the default shift width for indents
set expandtab                                             " make tabs into spaces (set by tabstop)
set smarttab                                              " smarter tab levels
set termguicolors                                         " enable true colors support (plug ayu-vim)
set autoindent
set hlsearch
set showmatch                                             " show matching brackets.
set matchtime=5                                           " bracket blinking.
set showcmd                                               " display an incomplete command in the lower right corner of the vim window
set smartcase                                             " Respect cases in search when mixed case detected
set smartindent                                           " Changes indent based on file extension
set splitbelow                                            " default horizontal split below
set splitright                                            " default vertical split right
set tags=./tags,tags;$HOME                                " Vim to search for Ctags file in current file's directory, moving up the directory structure until found/home is hit
set laststatus=2                                          " powerline
set rtp+=/usr/local/bin/fzf
set completeopt-=preview                                  " turn off preview window for ycm
set noswapfile                                            " turn off swap files
set foldmethod=indent                                     " detect folds based on inentation
set background=dark
set t_co=256                                              " force vim to use 256 colors

colorscheme solarized8_high

silent !stty -ixon                                        " allow us to use ctrl-s and ctrl-q as keybinds

filetype on                                               " enable filetype detection
filetype indent on                                        " enable filetype-specific indenting
filetype plugin on                                        " enable filetype-specific plugins

syntax on
syntax enable
""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""" Autocommands """"""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd vimleave * silent !stty ixon                      " restore default behaviour when leaving vim.
augroup javascript_folding
    au!
    au filetype javascript setlocal foldmethod=syntax
augroup end

augroup vimrc
   autocmd!
   autocmd colorscheme * highlight vertsplit term=none cterm=none ctermfg=none ctermbg=none guibg=bg guifg=grey |
                         highlight statusline term=none cterm=none gui=none guibg=bg guifg=grey |
                         highlight statuslinenc term=none cterm=none gui=none guibg=bg guifg=grey
   autocmd colorscheme * highlight pmenu guifg=#002b36 guibg=#839496
augroup end

augroup js_snippets
  autocmd!
  autocmd filetype javascript UltiSnipsAddFiletypes javascript-es6-react 
  autocmd filetype javascript UltiSnipsAddFiletypes javascript-jasmine-arrow 
augroup end

" open quickfix item in vert split
autocmd! filetype qf nnoremap <buffer> <leader><enter> <c-w><enter><c-w>l:cclo<cr>
""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""" Mappings """""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""
"
"""""""""""""""""normal mode""""""""""""""""""
" space as mod key
let mapleader = " "

" open nertree to the current open file
nnoremap <silent> <Leader>c :NERDTreeFind<CR>

" toggle nerdtree
map <leader>n :NERDTreeToggle <CR>

" kill all bad whitespace in the file
map <C-e> :%s/\s\+$//e <CR>

" Quit file - doesn't work, check with Gabe Harms (copied from his .vimrc)
map <C-q> :q <CR>

" Fuzzy finder
noremap <leader>f :Files <CR>

" Save file - doesn't work, check with Gabe Harms (copied from his .vimrc)
map <C-s> :w<CR> :echo "Saved" <CR>

map <C-h> <S-^>
map <C-l> <S-$>

" copy current relative file path
map <C-n> :let @+ = expand("%") <CR>

" set working directory to current file path
nnoremap <leader>C :lcd %:p:h<CR>:pwd<CR>

" write to buffer (save)
nmap <leader>s :w<CR>

" highlight search
map <leader>l :set hlsearch!<CR>

" open vimrc in a new tab!
map <leader>v :tabe ~/.vimrc<CR>

" open root .env in a new tab
map <leader>e :tabe ~/.env<CR>

" toggle text wrapping
map <leader>w :set wrap!<CR>:set linebreak<CR>
""""""""""""""""""Insert mode""""""""""""""""""
" Prevent vim from moving cursor after returning to normal mode
imap <esc> <esc>l

"Autocenter file jumps
nmap G Gzz
nmap * *zz
nmap # #zz
nmap <C-o> <C-o>zz
nmap <C-i> <C-i>zz

inoremap " ""<left>
inoremap ' ''<left>
inoremap ` ``<left>
inoremap ( ()<left>
inoremap (<CR> (<CR>)<ESC>O
inoremap (;<CR> (<CR>);<ESC>O
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O
imap <C-s> <Esc> :w<CR> :echo "Saved" <CR> " Save file

" what does this do?
imap <C-@> <C-Space>

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>
""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""" Plugins """"""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""
" Install the plugin manager if it doesn't exist
filetype off
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" -- Syntax, languages, & frameworks

Plug 'honza/vim-snippets'
Plug 'leafgarland/typescript-vim', { 'for': ['typescript', 'typescript.tsx'] }
Plug 'mxw/vim-jsx', { 'for': ['javascript', 'javascript.jsx'] }
Plug 'pangloss/vim-javascript', { 'for': ['html', 'javascript', 'javascript.jsx']}
Plug 'SirVer/ultisnips'
Plug 'tpope/vim-rails', { 'for': 'ruby' }
Plug 'tpope/vim-rake', { 'for': 'ruby' }
Plug 'Valloric/YouCompleteMe'
Plug 'w0rp/ale'

" -- Search & file nav

Plug 'scrooloose/nerdtree'
Plug '/usr/local/opt/fzf' | Plug 'junegunn/fzf.vim'

" -- Display

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" -- Misc Enhancements

Plug 'ludovicchabant/vim-gutentags'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'

call plug#end()
""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""" Plugin-specific settings and mappings """"""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:solarized_termcolors=256                            " use solarized 256 fallback

let g:UltiSnipsSnippetsDir = "~/.vim/ultisnips"           " location for custom snippets
let g:UltiSnipsExpandTrigger = "<C-j>"                    " change trigger to work with YCM

let $FZF_DEFAULT_COMMAND = 'ag -g ""'                     " find command for fzf plugin

let NERDTreeShowHidden=1                                  " show hidden files in nerdtree
let NERDTreeQuitOnOpen = 1                                " quit nerdtree when opening a file
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

let g:ale_fixers = {
\   'javascript': ['prettier'],
\   'typescript': ['tslint' ,'prettier'],
\   'css': ['prettier'],
\   'scss': ['prettier']
\}
let g:ale_fix_on_save = 1
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
" let g:airline_left_sep=''
" let g:airline_right_sep=''
let g:airline_symbols.crypt = 'üîí'
let g:airline_symbols.linenr = '‚êä'
let g:airline_symbols.linenr = '‚ê§'
let g:airline_symbols.linenr = '¬∂'
let g:airline_symbols.maxlinenr = '‚ò∞'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.branch = '‚éá'
let g:airline_symbols.paste = 'œÅ'
let g:airline_symbols.paste = '√û'
let g:airline_symbols.paste = '‚à•'
let g:airline_symbols.spell = 'Íû®'
let g:airline_symbols.notexists = '‚àÑ'
let g:airline_symbols.whitespace = 'Œû'
let g:airline_theme= 'solarized'

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
"""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""" Misc """""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""
" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") >= 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent                      " always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

if has('langmap') && exists('+langnoremap')
  " Prevent that the langmap option applies to characters that result from a
  " mapping.  If unset (default), this may break plugins (but it's backward
  " compatible).
  set langnoremap
endif

